<App Background="#fff">
	<!-- Assets and Styles are in StaticResources.ux-->
	<iOS.StatusBarConfig Style="Dark" Animation="Slide" IsVisible="True" />
	<Android.StatusBarConfig Color="#222" IsVisible="False" />	
	<JavaScript>
		/**
		 * Fuse + Custom JS modules
		 */
		var Observable = require("FuseJS/Observable");
		// var InterApp = require("FuseJS/InterApp");
		var Maps 	= require("FuseJS/Maps");
		var Common 	= require("./Modules/Common.js");
		var Main 	= require("./Modules/Main.js");
		var User 	= require("./Modules/User.js");
		var Biz 	= require("./Modules/Biz.js");
		var Blog 	= require("./Modules/Blog.js");
		
		var modalText = Observable('searching nearby . . .');
	
		/**
		 * 1) Get user location, all nearby coffee shops, displays in List and Map view
		 * 2) Get blog posts
		 */
		Main.getCoffeeShopsNearby().then(function() { /* This fires too quickly... */ });
		Blog.fetchData();
		
		function refreshMap(args) {
			// console.log('*** refreshMap ***');
			// console.log(User.lat + ', ' + User.lon);
			// Trigger "loading" modal
			Biz.isLoading.value = true;
			// Make the API call for nearby businesses
			var urlParams = 
				`term=coffee-tea&` + 
				// Need either `location` || (`lat` && `lon`)
				`lat=${User.lat.value}&` + 
				`lon=${User.lon.value}&` +
				// List of comma delimited pricing levels (1,2,3,4)
				`price=1,2,3,4&` +
				// Defaults to best_match if not provided  { best_match, rating, review_count, distance }
				`sort_by=distance&` +
				// Always set a limit (limit further on API side if need be)
				`limit=34`;

			Biz.fetchData('search', urlParams)
				.then((data) => {
					// Remove crappy coffee shops
					var legitCoffeeShops = Biz.stripCoffeeShops(data);
					// TODO: Display a "sorry" message if (legitCoffeeShops.length === 0)
					Biz.setItemList(legitCoffeeShops);
				});
		}
		
		/**
		 * Actions to take once pull-to-refresh is completed
		 * @return nothing
		 */
		function endLoading(){
			Biz.isLoading.value = false;
		}

		/**
		 * Get new businesses nearby when position has changed
		 * @return nothing
		 */
		function reloadHandler() {
			// Clear existing coffee shops, run search again
			Biz.itemList.replaceAll([]);
			Main.getCoffeeShopsNearby();
			
			// Handle ui stuff
			Biz.isLoading.value = true;
			// Manual cutoff 
			// setTimeout(endLoading, 1750);
		}

		module.exports = {
			// Data
			userLocation: User.location,
			userLat: User.lat,
			userLon: User.lon,
			zoomLevel: User.zoomLevel,
 			itemList: Biz.itemList,
 			blogPosts: Blog.blogPosts,
			modalText: modalText,

			// Methods
			callPhoneNumber: Common.callPhoneNumber,
			getDirections: Common.getDirections,
			shareViaSms: Common.shareViaSms,
			goToIG: Common.goToIG,
			readBlogPost: Common.readBlogPost,
			refreshMap: refreshMap,

			// Pull to refresh
			isLoading: Biz.isLoading,
			reloadHandler: reloadHandler
		};		
	</JavaScript>

	<DockPanel>
		<StatusBarBackground Dock="Top" />
		<BottomBarBackground Dock="Bottom" />
	
		<Panel ux:Name="contentPlaceholder" />

		<!-- NAVIGATION TABS -->
		<Panel ux:Name="menuBar" 
			Dock="Top" 
			Height="42" Margin="0" Padding="0" 
			Opacity="1"
			Background="#2e9faa"
		>
			<!-- Inactive Nav Tab Color -->
			<Grid ColumnCount="4" Margin="0" Padding="0" Layer="Overlay">
				<!-- STATIC RESOURCES -->
				<!-- Needs to be part of parent statusAndAppBar in order to be auto-hidden -->
				
				<Rectangle ux:Name="indicator" Color="AccentColor"
					LayoutMaster="page1Tab" Alignment="Bottom" Height="4" 
				>
					<LayoutAnimation>
						<Move RelativeTo="WorldPositionChange" X="1" Duration="0.5" Easing="BackIn"/>
					</LayoutAnimation>
				</Rectangle>
				<Panel ux:Name="page1Tab">
					<Tab Text="List">
						<Clicked>
							<Set navigation.Active="page1" />
						</Clicked>
					</Tab>
				</Panel>
				<Panel ux:Name="page2Tab">
					<Tab Text="Map">
						<Clicked>
							<Set navigation.Active="page2" />
						</Clicked>
					</Tab>
				</Panel>
				<Panel ux:Name="page3Tab">
					<Tab Text="Blog">
						<Clicked>
							<Set navigation.Active="page3" />
						</Clicked>
					</Tab>
				</Panel>
				<Panel ux:Name="page4Tab">
					<Tab Text="About">
						<Clicked>
							<Set navigation.Active="page4" />
						</Clicked>
					</Tab>
				</Panel>
			</Grid>
		</Panel>

		<!-- PAGE CONTROL - CHANGES ON TAB SELECTION -->
		<PageControl ux:Name="navigation">

			<!-- List View -->
			<Page ux:Name="page1" Padding="0" Margin="0" Background="#fff">
				<WhileActive Threshold="0.4">
					<Set indicator.LayoutMaster="page1Tab" />
				</WhileActive>
				
				<!-- Background Image -->
				<WhileTrue Value={isLoading}>
					<Panel Height="100%" Layer="Background">
						<ImageFill File="Assets/fsc-icon-portrait.png" 
							StretchMode="UniformToFill" WrapMode="ClampToEdge" Opacity="1"/>
					</Panel>
				</WhileTrue>

				<StackPanel>
					<!-- Pop up modal -->
					<WhileTrue Value="{isLoading}">
						<Change searchNearbyModal.Opacity="1" Duration=".35" />
					</WhileTrue>
					<NotificationModal ux:Name="searchNearbyModal" />

					<!-- ScrollableList of coffee shops -->
					<!-- SnapMinTransform keeps view from scrolling too far, revealing App bg -->
					<ScrollView ux:Name="itemScrollView" SnapMinTransform="false"
						ClipToBounds="false" LayoutMode="PreserveVisual">
						<StackPanel Margin="0,0,0,100">
							<!-- Pull to Refresh UX element -->
							<ReloadAnimation Dock="Top" />

							<Selection MinCount="0" MaxCount="1" />
								
							<!-- Loop through items -->
							<Each Items="{itemList}">
								<EventCard layoutTarget="contentPlaceholder" Margin="0,0,0,20">
									<Selectable Value="{id}" />
									<WhileSelected>
										<!-- Block background scroll while detail is up -->
										<Change itemScrollView.UserScroll="false" DelayBack="0" />
									</WhileSelected>
								</EventCard>
							</Each>
							<!-- End loop through items -->
						</StackPanel>
					</ScrollView>
				</StackPanel>
			</Page>

			<!-- Map View -->
			<Page ux:Name="page2" Background="#abb7b7">
				<WhileActive Threshold="0.4">
					<Set indicator.LayoutMaster="page2Tab" />
					<JavaScript>
						// console.log(" Now on MapView. ");
						// myMapView.setMarkers([
						// 	{ latitude: 34.01680, longitude: -118.49709, label: "The Refinery" },
						// 	{ latitude: 34.02818, longitude: -118.47837, label: "Good Boy Bob" },
						// 	{ latitude: 34.0614, longitude: -118.3109858, label: "Document Coffee Bar" },
						// 	{ latitude: 34.07239, longitude: -118.3672, label: "Verve Coffee Roasters" },
						// 	{ latitude: 34.0388, longitude: -118.23605, label: "The Wheelhouse" }
						// ]);
					</JavaScript>
				</WhileActive>
				<!-- <H1Text>Welcome to Page 2</H1Text> -->
				<PageMapView Alignment="Left" Margin="0" />
			</Page>
	
			<!-- Blog -->
			<Page ux:Name="page3">
				<WhileActive Threshold="0.4">
					<Set indicator.LayoutMaster="page3Tab" />
				</WhileActive>
				<PageBlog Margin="0" MinHeight="300"/>
			</Page>

			<!-- About Page -->
			<Page ux:Name="page4" Background="#fff" Padding="0,0" Margin="0,0">
				<WhileActive Threshold="0.4">
					<Set indicator.LayoutMaster="page4Tab" />
				</WhileActive>
				<PageAbout Alignment="Left" Margin="0" />
			</Page>
		</PageControl>

	</DockPanel>
</App>